hal: 10.20-s100: (c) Copyright 1995-2011 Cadence Design Systems, Inc.
Incisive HDL Simulator
hal: Options:   -cdslib /home/buet/exchange/mac/cds.lib -logfile hal.log worklib.mac_test:module.
hal: Snapshot:  worklib.mac_test:module.
hal: Workspace: /home/buet/exchange/mac.
hal: Date: Mon Dec 02 12:14:05 BDT 2024.

hal: Running on elaborated SNAPSHOT.....

  ==========================================================================
Performing lint checks 

halcheck: 10.20-s100: (c) Copyright 1995-2011 Cadence Design Systems, Inc.
visadev: 10.20-s100: (c) Copyright 1995-2011 Cadence Design Systems, Inc.
module mac_test;
|
halcheck: *W,NEEDIO (./mac_test.v,3|0): Top-level module 'mac_test' has no inputs/outputs/inouts.
`timescale 1ns / 1ps
|
halcheck: *N,CDNOTE (./mac_test.v,1|0): The compiler directive '`timescale' is used in the RTL.
    assign reduction_result = uut.hreduce.Result; // Access reduction unit output
|
halcheck: *W,MAXLEN (./mac_test.v,29|0): The HDL source line is 81 characters, which exceeds the recommended length of 80 characters.
        $monitor("Time=%0t | Activation=%0d | Weight=%0d | Product=%0d | Reduction_Result=%0d | MAC_Result=%0d", 
|
halcheck: *W,MAXLEN (./mac_test.v,83|0): The HDL source line is 113 characters, which exceeds the recommended length of 80 characters.
                 $time, activation, weight, product, reduction_result, mac_result);
|
halcheck: *W,MAXLEN (./mac_test.v,84|0): The HDL source line is 83 characters, which exceeds the recommended length of 80 characters.
    wire [31:0] mac_result;     // MAC accumulated result
|
halcheck: *W,STYVAL (./mac_test.v,12|0): Numeric value '31' used for identifier 'mac_result'. Use constants to avoid portability issues.
    wire [15:0] product;        // Product from the multiplier
|
halcheck: *W,STYVAL (./mac_test.v,15|0): Numeric value '15' used for identifier 'product'. Use constants to avoid portability issues.
    wire [31:0] reduction_result; // Reduction unit output
|
halcheck: *W,STYVAL (./mac_test.v,16|0): Numeric value '31' used for identifier 'reduction_result'. Use constants to avoid portability issues.
    reg [7:0] activation;       // 8-bit activation input
|
halcheck: *W,STYVAL (./mac_test.v,6|0): Numeric value '7' used for identifier 'activation'. Use constants to avoid portability issues.
    reg [7:0] weight;           // 8-bit weight input
|
halcheck: *W,STYVAL (./mac_test.v,7|0): Numeric value '7' used for identifier 'weight'. Use constants to avoid portability issues.
    always #5 clk = ~clk;
|
halcheck: *W,EVTRIG (./mac_test.v,32|0): Always block with no event trigger at the start of the block in module 'mac_test'.
    always #5 clk = ~clk;
|
halcheck: *W,SEPLIN (./mac_test.v,32|0): Use a separate line for each HDL statement.
    initial begin
|
halcheck: *W,NOBLKN (./mac_test.v,34|0): Each block should be labeled with a meaningful name.
        clk = 0;
|
halcheck: *W,IMPDTC (./mac_test.v,36|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        clk = 0;
|
halcheck: *W,INTTOB (./mac_test.v,36|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit mac_test.
        clk = 0;
|
halcheck: *W,TRUNCZ (./mac_test.v,36|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        reset = 1;              // Start with reset active
|
halcheck: *W,IMPDTC (./mac_test.v,37|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        reset = 1;              // Start with reset active
|
halcheck: *W,INTTOB (./mac_test.v,37|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit mac_test.
        reset = 1;              // Start with reset active
|
halcheck: *W,TRUNCZ (./mac_test.v,37|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        activation = 0;
|
halcheck: *W,IMPDTC (./mac_test.v,38|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        activation = 0;
|
halcheck: *W,TRUNCZ (./mac_test.v,38|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        weight = 0;
|
halcheck: *W,IMPDTC (./mac_test.v,39|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        weight = 0;
|
halcheck: *W,TRUNCZ (./mac_test.v,39|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        #10;
|
halcheck: *W,EMPSTM (./mac_test.v,42|0): Module 'mac_test' contains an empty statement.
        reset = 0;              // Deactivate reset
|
halcheck: *W,IMPDTC (./mac_test.v,43|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        reset = 0;              // Deactivate reset
|
halcheck: *W,INTTOB (./mac_test.v,43|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit mac_test.
        reset = 0;              // Deactivate reset
|
halcheck: *W,TRUNCZ (./mac_test.v,43|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        reset = 1;              // Assert reset
|
halcheck: *W,IMPDTC (./mac_test.v,72|0): Expression '1' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        reset = 1;              // Assert reset
|
halcheck: *W,INTTOB (./mac_test.v,72|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit mac_test.
        reset = 1;              // Assert reset
|
halcheck: *W,TRUNCZ (./mac_test.v,72|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        reset = 0;              // Deassert reset
|
halcheck: *W,IMPDTC (./mac_test.v,74|0): Expression '0' implicitly converted to type 'unsigned' from type 'signed' in module/design-unit mac_test.
        reset = 0;              // Deassert reset
|
halcheck: *W,INTTOB (./mac_test.v,74|0): Assigning a 0 or 1 (32 bits) to a single-bit variable in module/design-unit mac_test.
        reset = 0;              // Deassert reset
|
halcheck: *W,TRUNCZ (./mac_test.v,74|0): Truncation in constant conversion without a loss of bits in module/design-unit mac_test.
        #100;
|
halcheck: *W,EMPSTM (./mac_test.v,77|0): Module 'mac_test' contains an empty statement.
        $finish;
|
halcheck: *W,BADSYS (./mac_test.v,78|0): System task $finish in module 'mac_test' is ignored.
    initial begin
|
halcheck: *W,NOBLKN (./mac_test.v,82|0): Each block should be labeled with a meaningful name.
        $monitor("Time=%0t | Activation=%0d | Weight=%0d | Product=%0d | Reduction_Result=%0d | MAC_Result=%0d", 
|
halcheck: *W,BADSYS (./mac_test.v,83|0): System task $monitor in module 'mac_test' is ignored.
    hybrid_mac uut (
|
halcheck: *N,IDLENG (./mac_test.v,19|0): Identifier name 'uut' is not of appropriate length (4 to 16 characters).
module hybrid_mac (
|
halcheck: *W,DIFFMN (./mac.v,111|0): Module name 'hybrid_mac' differs from file name 'mac.v'.
module hybrid_mac (
|
halcheck: *N,PRTCNT (./mac.v,111|0): Module/Entity 'hybrid_mac' contains '5' ports.
halcheck: (./mac.v,111): Number of Input ports: 4.
halcheck: (./mac.v,111): Number of Output ports: 1.
        .A({16{product[15]}}),  
|
halcheck: *W,EXPIPC (./mac.v,126|0): Formal port 'A' of instance 'hreduce' is connected to an expression.
        .B({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,127|0): Formal port 'B' of instance 'hreduce' is connected to an expression.
        .C({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,128|0): Formal port 'C' of instance 'hreduce' is connected to an expression.
        .D({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,129|0): Formal port 'D' of instance 'hreduce' is connected to an expression.
        .E({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,130|0): Formal port 'E' of instance 'hreduce' is connected to an expression.
        .F({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,131|0): Formal port 'F' of instance 'hreduce' is connected to an expression.
        .G({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,132|0): Formal port 'G' of instance 'hreduce' is connected to an expression.
        .H({16{product[15]}}),
|
halcheck: *W,EXPIPC (./mac.v,133|0): Formal port 'H' of instance 'hreduce' is connected to an expression.
`timescale 1ns / 1ps
|
halcheck: *N,CDNOTE (./mac.v,1|0): The compiler directive '`timescale' is used in the RTL.
            accumulated_result <= 32'b0;  
|
halcheck: *W,BITUNS (./mac.v,15|0): Not all bits of constant '32'b0' are explicitly specified.
halcheck: (./mac.v,15): Constant extended by 31 bits to -> 32'b(0000000000000000000000000000000)0.
    assign temp1 = {4'b0, p0};
|
halcheck: *W,BITUNS (./mac.v,52|0): Not all bits of constant '4'b0' are explicitly specified.
halcheck: (./mac.v,52): Constant extended by 3 bits to -> 4'b(000)0.
    assign temp2 = {2'b0, p1, 2'b0};
|
halcheck: *W,BITUNS (./mac.v,53|0): Not all bits of constant '2'b0' are explicitly specified.
halcheck: (./mac.v,53): Constant extended by 1 bit to -> 2'b(0)0.
    assign temp3 = {2'b0, p2, 2'b0};
|
halcheck: *W,BITUNS (./mac.v,54|0): Not all bits of constant '2'b0' are explicitly specified.
halcheck: (./mac.v,54): Constant extended by 1 bit to -> 2'b(0)0.
    assign temp4 = {4'b0, p3};
|
halcheck: *W,BITUNS (./mac.v,55|0): Not all bits of constant '4'b0' are explicitly specified.
halcheck: (./mac.v,55): Constant extended by 3 bits to -> 4'b(000)0.
    assign temp1 = {8'b0, p0};           
|
halcheck: *W,BITUNS (./mac.v,75|0): Not all bits of constant '8'b0' are explicitly specified.
halcheck: (./mac.v,75): Constant extended by 7 bits to -> 8'b(0000000)0.
    assign temp2 = {4'b0, p1, 4'b0};     
|
halcheck: *W,BITUNS (./mac.v,76|0): Not all bits of constant '4'b0' are explicitly specified.
halcheck: (./mac.v,76): Constant extended by 3 bits to -> 4'b(000)0.
    assign temp3 = {4'b0, p2, 4'b0};     
|
halcheck: *W,BITUNS (./mac.v,77|0): Not all bits of constant '4'b0' are explicitly specified.
halcheck: (./mac.v,77): Constant extended by 3 bits to -> 4'b(000)0.
    assign temp4 = {p3, 8'b0};           
|
halcheck: *W,BITUNS (./mac.v,78|0): Not all bits of constant '8'b0' are explicitly specified.
halcheck: (./mac.v,78): Constant extended by 7 bits to -> 8'b(0000000)0.
    compressor6_3 c1(temp1[7], temp2[7], temp3[7], temp1[8], temp2[8], temp3[8], sum, carry, overflow);
|
halcheck: *W,MAXLEN (./mac.v,81|0): The HDL source line is 103 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp1 (.a(A[0]), .b(B[0]), .c(C[0]), .d(D[0]), .e(E[0]), .f(F[0]), .sum(sum1[0]), .carry(sum2[0]), .overflow(carry1));
|
halcheck: *W,MAXLEN (./mac.v,96|0): The HDL source line is 136 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp2 (.a(G[0]), .b(H[0]), .c(sum1[0]), .d(sum2[0]), .e(carry1), .f(1'b0), .sum(Result[0]), .carry(Result[1]), .overflow(carry2));
|
halcheck: *W,MAXLEN (./mac.v,97|0): The HDL source line is 148 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp3 (.a(A[1]), .b(B[1]), .c(C[1]), .d(D[1]), .e(E[1]), .f(F[1]), .sum(sum1[1]), .carry(sum2[1]), .overflow(carry3));
|
halcheck: *W,MAXLEN (./mac.v,99|0): The HDL source line is 136 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp4 (.a(G[1]), .b(H[1]), .c(sum1[1]), .d(sum2[1]), .e(carry2), .f(carry3), .sum(Result[2]), .carry(Result[3]), .overflow(carry4));
|
halcheck: *W,MAXLEN (./mac.v,100|0): The HDL source line is 150 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp5 (.a(A[2]), .b(B[2]), .c(C[2]), .d(D[2]), .e(E[2]), .f(F[2]), .sum(sum1[2]), .carry(sum2[2]), .overflow(carry5));
|
halcheck: *W,MAXLEN (./mac.v,102|0): The HDL source line is 136 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp6 (.a(G[2]), .b(H[2]), .c(sum1[2]), .d(sum2[2]), .e(carry4), .f(carry5), .sum(Result[4]), .carry(Result[5]), .overflow(carry6));
|
halcheck: *W,MAXLEN (./mac.v,103|0): The HDL source line is 150 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp7 (.a(A[3]), .b(B[3]), .c(C[3]), .d(D[3]), .e(E[3]), .f(F[3]), .sum(sum1[3]), .carry(sum2[3]), .overflow(carry7));
|
halcheck: *W,MAXLEN (./mac.v,105|0): The HDL source line is 136 characters, which exceeds the recommended length of 80 characters.
    compressor6_3 comp8 (.a(G[3]), .b(H[3]), .c(sum1[3]), .d(sum2[3]), .e(carry6), .f(carry7), .sum(Result[6]), .carry(Result[7]), .overflow(carry8));
|
halcheck: *W,MAXLEN (./mac.v,106|0): The HDL source line is 150 characters, which exceeds the recommended length of 80 characters.
    input wire [7:0] activation, weight;
|
halcheck: *W,STYVAL (./mac.v,116|0): Numeric value '7' used for identifier 'activation'. Use constants to avoid portability issues.
    input wire [7:0] activation, weight;
|
halcheck: *N,DECLIN (./mac.v,116|0): Use a separate line for each HDL declaration.
    input wire clk, reset;
|
halcheck: *N,DECLIN (./mac.v,117|0): Use a separate line for each HDL declaration.
    output wire [31:0] mac_result;
|
halcheck: *W,STYVAL (./mac.v,118|0): Numeric value '31' used for identifier 'mac_result'. Use constants to avoid portability issues.
    wire [15:0] product;
|
halcheck: *W,STYVAL (./mac.v,120|0): Numeric value '15' used for identifier 'product'. Use constants to avoid portability issues.
    wire [31:0] reduction_result;
|
halcheck: *W,STYVAL (./mac.v,121|0): Numeric value '31' used for identifier 'reduction_result'. Use constants to avoid portability issues.
module vedic8_8(
|
halcheck: *W,DIFFMN (./mac.v,60|0): Module name 'vedic8_8' differs from file name 'mac.v'.
module vedic8_8(
|
halcheck: *W,MULTMF (./mac.v,60|0): More than one design-unit definition in file 'mac.v'.
module vedic8_8(
|
halcheck: *N,PRTCNT (./mac.v,60|0): Module/Entity 'vedic8_8' contains '3' ports.
halcheck: (./mac.v,60): Number of Input ports: 2.
halcheck: (./mac.v,60): Number of Output ports: 1.
    vedic4_4 vm1(a[3:0], b[3:0], p0);
|
halcheck: *W,CBYNAM (./mac.v,70|0): Port connections for instance 'vm1' of module 'vedic4_4' should be made by name rather than by positional ordered list.
    vedic4_4 vm2(a[3:0], b[7:4], p1);
|
halcheck: *W,CBYNAM (./mac.v,71|0): Port connections for instance 'vm2' of module 'vedic4_4' should be made by name rather than by positional ordered list.
    vedic4_4 vm3(a[7:4], b[3:0], p2);
|
halcheck: *W,CBYNAM (./mac.v,72|0): Port connections for instance 'vm3' of module 'vedic4_4' should be made by name rather than by positional ordered list.
    vedic4_4 vm4(a[7:4], b[7:4], p3);
|
halcheck: *W,CBYNAM (./mac.v,73|0): Port connections for instance 'vm4' of module 'vedic4_4' should be made by name rather than by positional ordered list.
    compressor6_3 c1(temp1[7], temp2[7], temp3[7], temp1[8], temp2[8], temp3[8], sum, carry, overflow);
|
halcheck: *W,CBYNAM (./mac.v,81|0): Port connections for instance 'c1' of module 'compressor6_3' should be made by name rather than by positional ordered list.
    input [7:0] a, b;
|
halcheck: *W,STYVAL (./mac.v,64|0): Numeric value '7' used for identifier 'a'. Use constants to avoid portability issues.
    input [7:0] a, b;
|
halcheck: *N,DECLIN (./mac.v,64|0): Use a separate line for each HDL declaration.
    output [15:0] product;    
|
halcheck: *W,STYVAL (./mac.v,65|0): Numeric value '15' used for identifier 'product'. Use constants to avoid portability issues.
    wire [7:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,67|0): Identifier 'p0' has a numeric value suffix.
    wire [7:0] p0, p1, p2, p3;
|
halcheck: *W,STYVAL (./mac.v,67|0): Numeric value '7' used for identifier 'p0'. Use constants to avoid portability issues.
    wire [7:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,67|0): Identifier 'p1' has a numeric value suffix.
    wire [7:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,67|0): Identifier 'p2' has a numeric value suffix.
    wire [7:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,67|0): Identifier 'p3' has a numeric value suffix.
    wire [15:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,68|0): Identifier 'temp1' has a numeric value suffix.
    wire [15:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,STYVAL (./mac.v,68|0): Numeric value '15' used for identifier 'temp1'. Use constants to avoid portability issues.
    wire [15:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,68|0): Identifier 'temp2' has a numeric value suffix.
    wire [15:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,68|0): Identifier 'temp3' has a numeric value suffix.
    wire [15:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,68|0): Identifier 'temp4' has a numeric value suffix.
    assign product = temp1 + temp2 + temp3 + temp4 + {overflow, carry, sum};
|
halcheck: *W,POIASG (./mac.v,83|0): The result of addition operation may lead to a potential overflow in module/design-unit vedic_mult.
halcheck: (./mac.v,83): LHS operand 'product' is 16 bit(s), RHS operand 'temp1 + temp2 + temp...' is 19 bit(s).
halcheck: (./mac.v,83): Increase the size of LHS by 3 bit(s).
    assign product = temp1 + temp2 + temp3 + temp4 + {overflow, carry, sum};
|
halcheck: *W,LRGOPR (./mac.v,83|0): Arithmetic or relational operation performed on large operands in module/design-unit vedic_mult.
    assign product = temp1 + temp2 + temp3 + temp4 + {overflow, carry, sum};
|
halcheck: *W,UELOPR (./mac.v,83|0): Unequal length operand in bit/arithmetic operator PLUS in module/design-unit vedic_mult.
halcheck: (./mac.v,83): LHS operand 'temp1 + temp2 + temp...' is 16 bits, RHS operand '{overflow,carry,sum}' is 3 bits.
    vedic4_4 vm1(a[3:0], b[3:0], p0);
|
halcheck: *N,IDLENG (./mac.v,70|0): Identifier name 'vm1' is not of appropriate length (4 to 16 characters).
module vedic4_4(
|
halcheck: *W,DIFFMN (./mac.v,37|0): Module name 'vedic4_4' differs from file name 'mac.v'.
module vedic4_4(
|
halcheck: *W,MULTMF (./mac.v,37|0): More than one design-unit definition in file 'mac.v'.
module vedic4_4(
|
halcheck: *N,PRTCNT (./mac.v,37|0): Module/Entity 'vedic4_4' contains '3' ports.
halcheck: (./mac.v,37): Number of Input ports: 2.
halcheck: (./mac.v,37): Number of Output ports: 1.
    input [3:0] a, b;
|
halcheck: *W,STYVAL (./mac.v,41|0): Numeric value '3' used for identifier 'a'. Use constants to avoid portability issues.
    input [3:0] a, b;
|
halcheck: *N,DECLIN (./mac.v,41|0): Use a separate line for each HDL declaration.
    output [7:0] product; 
|
halcheck: *W,STYVAL (./mac.v,42|0): Numeric value '7' used for identifier 'product'. Use constants to avoid portability issues.
    wire [3:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,44|0): Identifier 'p0' has a numeric value suffix.
    wire [3:0] p0, p1, p2, p3;
|
halcheck: *W,STYVAL (./mac.v,44|0): Numeric value '3' used for identifier 'p0'. Use constants to avoid portability issues.
    wire [3:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,44|0): Identifier 'p1' has a numeric value suffix.
    wire [3:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,44|0): Identifier 'p2' has a numeric value suffix.
    wire [3:0] p0, p1, p2, p3;
|
halcheck: *W,NUMSUF (./mac.v,44|0): Identifier 'p3' has a numeric value suffix.
    wire [7:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,45|0): Identifier 'temp1' has a numeric value suffix.
    wire [7:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,STYVAL (./mac.v,45|0): Numeric value '7' used for identifier 'temp1'. Use constants to avoid portability issues.
    wire [7:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,45|0): Identifier 'temp2' has a numeric value suffix.
    wire [7:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,45|0): Identifier 'temp3' has a numeric value suffix.
    wire [7:0] temp1, temp2, temp3, temp4;
|
halcheck: *W,NUMSUF (./mac.v,45|0): Identifier 'temp4' has a numeric value suffix.
    assign product = temp1 + temp2 + temp3 + temp4;
|
halcheck: *W,POIASG (./mac.v,57|0): The result of addition operation may lead to a potential overflow in module/design-unit vm1.
halcheck: (./mac.v,57): LHS operand 'product' is 8 bit(s), RHS operand 'temp1 + temp2 + temp...' is 10 bit(s).
halcheck: (./mac.v,57): Increase the size of LHS by 2 bit(s).
    vedic4_4 vm2(a[3:0], b[7:4], p1);
|
halcheck: *N,IDLENG (./mac.v,71|0): Identifier name 'vm2' is not of appropriate length (4 to 16 characters).
    vedic4_4 vm3(a[7:4], b[3:0], p2);
|
halcheck: *N,IDLENG (./mac.v,72|0): Identifier name 'vm3' is not of appropriate length (4 to 16 characters).
    vedic4_4 vm4(a[7:4], b[7:4], p3);
|
halcheck: *N,IDLENG (./mac.v,73|0): Identifier name 'vm4' is not of appropriate length (4 to 16 characters).
    compressor6_3 c1(temp1[7], temp2[7], temp3[7], temp1[8], temp2[8], temp3[8], sum, carry, overflow);
|
halcheck: *N,IDLENG (./mac.v,81|0): Identifier name 'c1' is not of appropriate length (4 to 16 characters).
module compressor6_3(
|
halcheck: *W,DIFFMN (./mac.v,21|0): Module name 'compressor6_3' differs from file name 'mac.v'.
module compressor6_3(
|
halcheck: *W,MULTMF (./mac.v,21|0): More than one design-unit definition in file 'mac.v'.
module compressor6_3(
|
halcheck: *N,PRTCNT (./mac.v,21|0): Module/Entity 'compressor6_3' contains '9' ports.
halcheck: (./mac.v,21): Number of Input ports: 6.
halcheck: (./mac.v,21): Number of Output ports: 3.
    input a, b, c, d, e, f;
|
halcheck: *N,DECLIN (./mac.v,25|0): Use a separate line for each HDL declaration.
    output sum, carry, overflow;
|
halcheck: *N,DECLIN (./mac.v,26|0): Use a separate line for each HDL declaration.
module reduction_unit_with_6_3 (
|
halcheck: *N,IDLENG (./mac.v,86|0): Identifier name 'reduction_unit_with_6_3' is not of appropriate length (4 to 16 characters).
module reduction_unit_with_6_3 (
|
halcheck: *W,DIFFMN (./mac.v,86|0): Module name 'reduction_unit_with_6_3' differs from file name 'mac.v'.
module reduction_unit_with_6_3 (
|
halcheck: *W,MULTMF (./mac.v,86|0): More than one design-unit definition in file 'mac.v'.
module reduction_unit_with_6_3 (
|
halcheck: *N,PRTCNT (./mac.v,86|0): Module/Entity 'reduction_unit_with_6_3' contains '9' ports.
halcheck: (./mac.v,86): Number of Input ports: 8.
halcheck: (./mac.v,86): Number of Output ports: 1.
    compressor6_3 comp2 (.a(G[0]), .b(H[0]), .c(sum1[0]), .d(sum2[0]), .e(carry1), .f(1'b0), .sum(Result[0]), .carry(Result[1]), .overflow(carry2));
|
halcheck: *W,IPRTEX (./mac.v,97|0): A constant is used in a port expression.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,STYVAL (./mac.v,90|0): Numeric value '15' used for identifier 'A'. Use constants to avoid portability issues.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *N,DECLIN (./mac.v,90|0): Use a separate line for each HDL declaration.
    output wire [31:0] Result;    
|
halcheck: *W,STYVAL (./mac.v,91|0): Numeric value '31' used for identifier 'Result'. Use constants to avoid portability issues.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'A' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'B' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'C' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'D' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'E' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'F' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'G' uses uppercase characters.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,LCVARN (./mac.v,90|0): Net name 'H' uses uppercase characters.
    output wire [31:0] Result;    
|
halcheck: *W,LCVARN (./mac.v,91|0): Net name 'Result' uses uppercase characters.
    wire [15:0] sum1, sum2;
|
halcheck: *W,NUMSUF (./mac.v,93|0): Identifier 'sum1' has a numeric value suffix.
    wire [15:0] sum1, sum2;
|
halcheck: *W,STYVAL (./mac.v,93|0): Numeric value '15' used for identifier 'sum1'. Use constants to avoid portability issues.
    wire [15:0] sum1, sum2;
|
halcheck: *W,NUMSUF (./mac.v,93|0): Identifier 'sum2' has a numeric value suffix.
    wire [15:0] sum1, sum2;
|
halcheck: *W,URAWIR (./mac.v,93|0): Wire 'sum1[15:4]' defined in module 'reduction_unit_with_6_3' is unused (neither read nor assigned).
    wire [15:0] sum1, sum2;
|
halcheck: *W,URAWIR (./mac.v,93|0): Wire 'sum2[15:4]' defined in module 'reduction_unit_with_6_3' is unused (neither read nor assigned).
    wire carry1, carry2, carry3, carry4, carry5, carry6, carry7, carry8;
|
halcheck: *W,URDWIR (./mac.v,94|0): Wire 'carry8' defined in module 'reduction_unit_with_6_3' does not drive any object, but is assigned at least once.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'A[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'B[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'C[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'D[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'E[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'F[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'G[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[9]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[4]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[12]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[7]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[15]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[10]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[5]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[13]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[8]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[11]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[6]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    input wire [15:0] A, B, C, D, E, F, G, H;
|
halcheck: *W,URDPRT (./mac.v,90|0): The input/inout port 'H[14]' defined in the module 'reduction_unit_with_6_3' is unread, but assigned.
    accumulator acc (
|
halcheck: *N,IDLENG (./mac.v,137|0): Identifier name 'acc' is not of appropriate length (4 to 16 characters).
module accumulator (
|
halcheck: *W,DIFFMN (./mac.v,2|0): Module name 'accumulator' differs from file name 'mac.v'.
module accumulator (
|
halcheck: *W,MULTMF (./mac.v,2|0): More than one design-unit definition in file 'mac.v'.
module accumulator (
|
halcheck: *N,PRTCNT (./mac.v,2|0): Module/Entity 'accumulator' contains '4' ports.
halcheck: (./mac.v,2): Number of Input ports: 3.
halcheck: (./mac.v,2): Number of Output ports: 1.
    input wire [31:0] input_data;
|
halcheck: *W,STYVAL (./mac.v,10|0): Numeric value '31' used for identifier 'input_data'. Use constants to avoid portability issues.
    output reg [31:0] accumulated_result;
|
halcheck: *W,STYVAL (./mac.v,11|0): Numeric value '31' used for identifier 'accumulated_result'. Use constants to avoid portability issues.
    always @(posedge clk or posedge reset) begin
|
halcheck: *W,NOBLKN (./mac.v,13|0): Each block should be labeled with a meaningful name.
            accumulated_result <= accumulated_result + input_data;  
|
halcheck: *W,POIASG (./mac.v,17|0): The result of addition operation may lead to a potential overflow in module/design-unit acc.
halcheck: (./mac.v,17): LHS operand 'accumulated_result' is 32 bit(s), RHS operand 'accumulated_result +...' is 33 bit(s).
halcheck: (./mac.v,17): Increase the size of LHS by 1 bit(s).
            accumulated_result <= accumulated_result + input_data;  
|
halcheck: *W,LRGOPR (./mac.v,17|0): Arithmetic or relational operation performed on large operands in module/design-unit acc.
    wire [15:0] product;
|
halcheck: *W,URDWIR (./mac.v,120|0): Wire 'product[14:0]' defined in module 'hybrid_mac' does not drive any object, but is assigned at least once.
halcheck: Total errors   = 0.
halcheck: Total warnings = 230.

  ==========================================================================
Performing synthesizability checks 

cfe: 10.20.100-s(10.20.s100): (c) Copyright 1995 - 2011 Cadence Design Systems, Inc.
cfe Build : Fri Oct  7 18:59:28 IST 2011 ldvopt160
halsynth: Loading design snapshot....
halsynth: Traversing design hierarchy....
    output wire [31:0] Result;    
|
halsynth: *W,PUNDRV (./mac.v,91|0): Primary output/inout 'Result'  is not fully driven in the module 'reduction_unit_with_6_3'.
halsynth: (./mac.v,91|0): Result[31:8] is undriven. Source HDL information for the error/warning mentioned above.
    assign product = uut.vedic_mult.product;  // Access multiplier product
|
halsynth: *W,OOMRUS (./mac_test.v,28|0): Module mac_test has unsynthesizable OOMRs (Out-Of-Module Reference).
    assign reduction_result = uut.hreduce.Result; // Access reduction unit output
|
halsynth: *W,OOMRUS (./mac_test.v,29|0): Module mac_test has unsynthesizable OOMRs (Out-Of-Module Reference).
    always #5 clk = ~clk;
|
halsynth: *E,AWNDEL (./mac_test.v,32|0): Always block with no event trigger at the start in module mac_test.
    initial begin
|
halsynth: *W,INIUSP (./mac_test.v,34|0): Module mac_test has an initial block or a variable declaration assignment, which is ignored by synthesis tools.
    initial begin
|
halsynth: *W,INIUSP (./mac_test.v,82|0): Module mac_test has an initial block or a variable declaration assignment, which is ignored by synthesis tools.
halsynth: *W,COMBLP: In module mac_test, combinational loop detected for node clk.
    always #5 clk = ~clk;
|
halsynth: (./mac_test.v,32|0): Source HDL information for the error/warning mentioned above.
    always #5 clk = ~clk;
|
halsynth: *W,IGNDLY (./mac_test.v,32|0): Lumped delay in module 'mac_test' is ignored.
halsynth: Total errors   = 1.
halsynth: Total warnings = 7.

  ==========================================================================
Performing structural checks 

halstruct: 10.20-s100: (c) Copyright 1995-2011 Cadence Design Systems, Inc.
visadev: 10.20-s100: (c) Copyright 1995-2011 Cadence Design Systems, Inc.
    reg clk;                    // Clock signal
|
halstruct: *E,CMBPAU (./mac_test.v,8|0): Combinational path detected through 'clk' in module/design-unit 'mac_test'.
halstruct: (./mac_test.v,32): mac_test.clk.
    assign product = uut.vedic_mult.product;  // Access multiplier product
|
halstruct: *N,INFNOT (./mac_test.v,28|0): Ignoring wire 'product' with no fanout to module/design-unit outputs or child instances.
    assign reduction_result = uut.hreduce.Result; // Access reduction unit output
|
halstruct: *N,INFNOT (./mac_test.v,29|0): Ignoring wire 'reduction_result' with no fanout to module/design-unit outputs or child instances.
    hybrid_mac uut (
|
halstruct: *E,UNCONI (./mac_test.v,19|0): Input port 'activation' of entity/module 'hybrid_mac' is being used inside architecture/module, but not connected (either partially or completely) in its instance 'mac_test.uut'.
halstruct: (./mac_test.v,19): 'activation[7:0]' mapped to actual expression 'activation' which is undriven.
    hybrid_mac uut (
|
halstruct: *E,UNCONI (./mac_test.v,19|0): Input port 'weight' of entity/module 'hybrid_mac' is being used inside architecture/module, but not connected (either partially or completely) in its instance 'mac_test.uut'.
halstruct: (./mac_test.v,19): 'weight[7:0]' mapped to actual expression 'weight' which is undriven.
    hybrid_mac uut (
|
halstruct: *E,UNCONI (./mac_test.v,19|0): Input port 'reset' of entity/module 'hybrid_mac' is being used inside architecture/module, but not connected (either partially or completely) in its instance 'mac_test.uut'.
halstruct: (./mac_test.v,19): 'reset' mapped to actual expression 'reset' which is undriven.
    hybrid_mac uut (
|
halstruct: *W,UNCONO (./mac_test.v,19|0): Port 'mac_result' (which is being used as an output) of entity/module 'hybrid_mac' is being driven inside the design, but not connected (either partially or completely) in its instance 'mac_test.uut'.
    vedic8_8 vedic_mult (.a(activation), .b(weight), .product(product));
|
halstruct: *W,UNCONO (./mac.v,123|0): Port 'product' (which is being used as an output) of entity/module 'vedic8_8' is being driven inside the design, but not connected (either partially or completely) in its instance 'mac_test.uut.vedic_mult'.
halstruct: (./mac.v,123): 'product[14:0]' is not connected.
    assign product = temp1 + temp2 + temp3 + temp4 + {overflow, carry, sum};
|
halstruct: *W,SYNPRT (./mac.v,83|0): Output port 'product' is assigned asynchronously.
    assign product = temp1 + temp2 + temp3 + temp4;
|
halstruct: *W,SYNPRT (./mac.v,57|0): Output port 'product' is assigned asynchronously.
    assign sum = sum1 ^ sum2;
|
halstruct: *W,SYNPRT (./mac.v,32|0): Output port 'sum' is assigned asynchronously.
    assign carry = carry1 ^ carry2;
|
halstruct: *W,SYNPRT (./mac.v,33|0): Output port 'carry' is assigned asynchronously.
    assign overflow = carry1 & carry2;
|
halstruct: *W,SYNPRT (./mac.v,34|0): Output port 'overflow' is assigned asynchronously.
    compressor6_3 comp2 (.a(G[0]), .b(H[0]), .c(sum1[0]), .d(sum2[0]), .e(carry1), .f(1'b0), .sum(Result[0]), .carry(Result[1]), .overflow(carry2));
|
halstruct: *W,SYNPRT (./mac.v,97|0): Output port 'Result[0]' is assigned asynchronously.
    compressor6_3 comp2 (.a(G[0]), .b(H[0]), .c(sum1[0]), .d(sum2[0]), .e(carry1), .f(1'b0), .sum(Result[0]), .carry(Result[1]), .overflow(carry2));
|
halstruct: *W,SYNPRT (./mac.v,97|0): Output port 'Result[1]' is assigned asynchronously.
    compressor6_3 comp4 (.a(G[1]), .b(H[1]), .c(sum1[1]), .d(sum2[1]), .e(carry2), .f(carry3), .sum(Result[2]), .carry(Result[3]), .overflow(carry4));
|
halstruct: *W,SYNPRT (./mac.v,100|0): Output port 'Result[2]' is assigned asynchronously.
    compressor6_3 comp4 (.a(G[1]), .b(H[1]), .c(sum1[1]), .d(sum2[1]), .e(carry2), .f(carry3), .sum(Result[2]), .carry(Result[3]), .overflow(carry4));
|
halstruct: *W,SYNPRT (./mac.v,100|0): Output port 'Result[3]' is assigned asynchronously.
    compressor6_3 comp6 (.a(G[2]), .b(H[2]), .c(sum1[2]), .d(sum2[2]), .e(carry4), .f(carry5), .sum(Result[4]), .carry(Result[5]), .overflow(carry6));
|
halstruct: *W,SYNPRT (./mac.v,103|0): Output port 'Result[4]' is assigned asynchronously.
    compressor6_3 comp6 (.a(G[2]), .b(H[2]), .c(sum1[2]), .d(sum2[2]), .e(carry4), .f(carry5), .sum(Result[4]), .carry(Result[5]), .overflow(carry6));
|
halstruct: *W,SYNPRT (./mac.v,103|0): Output port 'Result[5]' is assigned asynchronously.
    compressor6_3 comp8 (.a(G[3]), .b(H[3]), .c(sum1[3]), .d(sum2[3]), .e(carry6), .f(carry7), .sum(Result[6]), .carry(Result[7]), .overflow(carry8));
|
halstruct: *W,SYNPRT (./mac.v,106|0): Output port 'Result[6]' is assigned asynchronously.
    compressor6_3 comp8 (.a(G[3]), .b(H[3]), .c(sum1[3]), .d(sum2[3]), .e(carry6), .f(carry7), .sum(Result[6]), .carry(Result[7]), .overflow(carry8));
|
halstruct: *W,SYNPRT (./mac.v,106|0): Output port 'Result[7]' is assigned asynchronously.
    compressor6_3 comp8 (.a(G[3]), .b(H[3]), .c(sum1[3]), .d(sum2[3]), .e(carry6), .f(carry7), .sum(Result[6]), .carry(Result[7]), .overflow(carry8));
|
halstruct: *W,UNCONO (./mac.v,106|0): Port 'overflow' (which is being used as an output) of entity/module 'compressor6_3' is being driven inside the design, but not connected (either partially or completely) in its instance 'mac_test.uut.hreduce.comp8'.
            accumulated_result <= accumulated_result + input_data;  
|
halstruct: *W,ASNRST (./mac.v,17|0): Flip-flop 'mac_test.uut.acc.accumulated_result' has 'active_high' asynchronous set/reset 'reset' as against the recommended 'active_low' style.
            accumulated_result <= accumulated_result + input_data;  
|
halstruct: *N,FFASRT (./mac.v,17|0): Flip-flop 'accumulated_result' has an asynchronous reset .
    reg clk;                    // Clock signal
|
halstruct: *N,CLKINF (./mac_test.v,8|0): Signal 'mac_test.clk' was inferred as clock.
halstruct: (./mac_test.v,8): Clock source is signal 'mac_test.clk'.
halstruct: (./mac.v,17): Drives the flip-flop 'mac_test.uut.acc.accumulated_result'.
            accumulated_result <= accumulated_result + input_data;  
|
halstruct: *W,ACNCPI (./mac.v,17|0): Asynchronous reset 'reset' of latch/flip-flop 'mac_test.uut.acc.accumulated_result' is not controllable from primary inputs.
            accumulated_result <= accumulated_result + input_data;  
|
halstruct: *E,CBPAHI (./mac.v,17|0): Combinatorial path crossing multiple units drives 'mac_test.uut.acc.accumulated_result'.
halstruct: (./mac.v,17): in instance 'mac_test.uut.acc', combinatorial function of input 'input_data' drives 'accumulated_result'.
halstruct: (./mac.v,137): in instance 'mac_test.uut', 'reduction_result' drives input 'input_data' of instance 'acc'.
halstruct: (./mac.v,125): in instance 'mac_test.uut', output 'Result[1]' of instance 'hreduce' drives 'reduction_result'.
halstruct: (./mac.v,97): in instance 'mac_test.uut.hreduce', output 'carry' of instance 'comp2' drives 'Result[1]'.
halstruct: (./mac.v,33): in instance 'mac_test.uut.hreduce.comp2', combinatorial function drives 'carry'.
            accumulated_result <= accumulated_result + input_data;  
|
halstruct: *W,CLKNPI (./mac.v,17|0): Flip-flop 'mac_test.uut.acc.accumulated_result' has clock 'clk' which is not derived from primary input.
halstruct: (./mac_test.v,32): Derived from local variable 'clk'.
            accumulated_result <= accumulated_result + input_data;  
|
halstruct: *W,NEGCLK (./mac.v,17|0): Clock signal 'mac_test.clk' of flip-flop 'mac_test.uut.acc.accumulated_result' is derived from an inverter.
module mac_test;
|
halstruct: *W,ATLGLC (./mac_test.v,3|0): Glue logic inferred in top-level module/design-unit 'mac_test'.
halstruct: (./mac_test.v,32): HDL-statement inferred as glue logic.
halstruct: (./mac_test.v,28): HDL-statement inferred as glue logic.
halstruct: (./mac_test.v,29): HDL-statement inferred as glue logic.
module mac_test;
|
halstruct: *N,NUMDFF (./mac_test.v,3|0): Number of single-bit D flip-flops present in the hierarchy is 32.
halstruct: Design facts generated in 'hal.design_facts'.
halstruct: Total errors   = 5.
halstruct: Total warnings = 21.

  ==========================================================================
Analysis complete.

